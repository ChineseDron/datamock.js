// Generated by CoffeeScript 1.4.0
(function() {
  var attribSel, emailDomains, emailNames, emailTLD, firstNames, genEmail, genName, lastNames, lorem, n, randChoice;

  firstNames = ["James", "John", "Robert", "Michael", "William", "David", "Richard", "Charles", "Joseph", "Thomas", "Mary", "Patricia", "Linda", "Barbara", "Elizabeth", "Jennifer", "Maria", "Susan", "Margaret", "Dorothy"];

  lastNames = ["Smith", "Johnson", "Williams", "Jones", "Brown", "Davis", "Miller", "Wilson", "Moore", "Taylor", "Anderson", "Thomas", "Jackson", "White", "Harris", "Martin", "Thompson", "Garcia", "Martinez", "Robinson"];

  emailNames = (function() {
    var _i, _len, _results;
    _results = [];
    for (_i = 0, _len = firstNames.length; _i < _len; _i++) {
      n = firstNames[_i];
      _results.push(n.toLowerCase());
    }
    return _results;
  })();

  emailDomains = (function() {
    var _i, _len, _results;
    _results = [];
    for (_i = 0, _len = lastNames.length; _i < _len; _i++) {
      n = lastNames[_i];
      _results.push(n.toLowerCase());
    }
    return _results;
  })();

  emailTLD = ["org", "com", "net"];

  lorem = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed vel velit et massa\nultricies viverra et eget nunc. Donec laoreet hendrerit sapien, eget rutrum\nlectus posuere vitae. Proin lobortis rhoncus enim, nec faucibus augue pharetra\nvel. Donec at nisi ligula, at gravida dui. Nulla sed sapien turpis, quis ornare\nnibh. Duis lacinia, leo non vehicula dapibus, nulla orci eleifend ligula, a\nmolestie sapien odio et nisi. Pellentesque vel ligula sem. Maecenas auctor\nconsectetur convallis.";

  randChoice = function(arr) {
    return arr[Math.floor(Math.random() * arr.length)];
  };

  genName = function() {
    return "" + (randChoice(firstNames)) + " " + (randChoice(lastNames));
  };

  genEmail = function() {
    return "" + (randChoice(emailNames)) + "@" + (randChoice(emailDomains)) + "." + (randChoice(emailTLD));
  };

  attribSel = function($sel, attr) {
    attr = "[" + attr + "]";
    if ($sel.is(attr)) {
      $sel.add($sel.find(attr));
    } else {
      $sel = $sel.find(attr);
    }
    return $sel;
  };

  $.fn.datamock = function() {
    return $(this).each(function() {
      $(attribSel($(this), 'data-mock-clone').get().reverse()).each(function() {
        var $el, $last, $parent, clone, i, init, start, _i, _ref, _results;
        $el = $(this);
        clone = parseInt($el.data('mock-clone'), 10);
        $parent = $el.parent();
        $last = $el.siblings('[data-mock-id]').last();
        if ($last.size() === 1) {
          if ($el.data('mock-clone-fixed')) {
            return;
          }
          start = parseInt($last.data('mock-id'), 10);
          init = false;
        } else {
          start = 1;
          init = true;
        }
        $el.attr('data-mock-id', start);
        start++;
        _results = [];
        for (i = _i = start, _ref = start + clone - (init != null ? init : {
          1: 0
        }); start <= _ref ? _i < _ref : _i > _ref; i = start <= _ref ? ++_i : --_i) {
          _results.push($parent.append($el.clone().attr('data-mock-id', i).removeAttr('data-mock-clone')));
        }
        return _results;
      });
      attribSel($(this), 'data-mock').each(function() {
        var $el, text;
        $el = $(this);
        switch ($el.data('mock')) {
          case 'id':
            text = $el.closest('[data-mock-id]').data('mock-id');
            break;
          case 'name':
            text = genName();
            break;
          case 'email':
            text = genEmail();
            break;
          case 'lorem':
            text = lorem;
        }
        return $el.text(text);
      });
      attribSel($(this), 'data-mock-choices').each(function() {
        var $el;
        $el = $(this);
        return $el.text(randChoice($el.data('mock-choices').split(',')));
      });
      return attribSel($(this), 'data-mock-choice').each(function() {
        var $el, $sel, choiceSel;
        $el = $(this);
        choiceSel = "[data-mock-choice='" + ($el.data('mock-choice')) + "']";
        $sel = $el.add($el.siblings(choiceSel));
        $el = $sel.eq(Math.floor(Math.random() * $sel.size()));
        return $el.siblings(choiceSel).remove();
      });
    });
  };

}).call(this);
